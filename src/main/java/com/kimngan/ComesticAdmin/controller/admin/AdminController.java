package com.kimngan.ComesticAdmin.controller.admin;

import com.kimngan.ComesticAdmin.entity.NguoiDungDetails;

import com.kimngan.ComesticAdmin.services.DonHangService;
import com.kimngan.ComesticAdmin.services.HoaDonService;
import com.kimngan.ComesticAdmin.services.NguoiDungService;
import com.kimngan.ComesticAdmin.services.SanPhamService;

import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import java.math.BigDecimal;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;



@Controller
@RequestMapping("/admin")
public class AdminController {

	
	@Autowired
    private NguoiDungService nguoiDungService;
	@Autowired
	private DonHangService donHangService;

	@Autowired
	private SanPhamService sanPhamService;
	
	@Autowired
	private HoaDonService hoaDonService;
	
	
	@GetMapping({ "", "/index" })
	public String adminHome(Model model) {
		// L·∫•y th√¥ng tin ng∆∞·ªùi d√πng ƒë√£ ƒëƒÉng nh·∫≠p
		NguoiDungDetails nguoiDungDetails = (NguoiDungDetails) SecurityContextHolder.getContext().getAuthentication()
				.getPrincipal();

		// Th√™m th√¥ng tin ng∆∞·ªùi d√πng v√†o model
		model.addAttribute("user", nguoiDungDetails);
		
		 // Th√™m th√¥ng tin th·ªëng k√™ v√†o model
        // T·ªïng s·ªë kh√°ch h√†ng (Ng∆∞·ªùi d√πng c√≥ quy·ªÅn kh√°ch h√†ng)
        long totalCustomers = nguoiDungService.countCustomers();
        model.addAttribute("totalCustomers", totalCustomers);
		
        long totalOrders = donHangService.countOrders();
        model.addAttribute("totalOrders", totalOrders);
        
        long totalActiveProducts = sanPhamService.countActiveProducts();
        model.addAttribute("totalProducts", totalActiveProducts);

     //// Th·ªëng k√™ ƒë∆°n h√†ng th√†nh c√¥ng v√† ch∆∞a x√°c nh·∫≠n
        long successfulOrders = donHangService.countByTrangThaiDonHang("ƒê√£ ho√†n th√†nh");
        long pendingOrders = donHangService.countByTrangThaiDonHang("ƒêang x·ª≠ l√Ω");
        model.addAttribute("successfulOrders", successfulOrders);
        model.addAttribute("pendingOrders", pendingOrders);

        // T√≠nh doanh thu t·ª´ c√°c h√≥a ƒë∆°n ƒë√£ x√°c nh·∫≠n
        BigDecimal totalRevenue = hoaDonService.calculateTotalRevenue();
        System.out.println("üîç T·ªïng doanh thu t·ª´ h√≥a ƒë∆°n ƒë√£ x√°c nh·∫≠n: " + totalRevenue);
        model.addAttribute("totalRevenue", totalRevenue);
		
     // Th√™m s·ªë h√≥a ƒë∆°n ch∆∞a x√°c nh·∫≠n v√†o model
        long unconfirmedInvoices = hoaDonService.countUnconfirmedInvoices();
        model.addAttribute("unconfirmedInvoices", unconfirmedInvoices);
		
		
		

		return "admin/index"; // Trang ch√≠nh cho admin sau khi ƒëƒÉng nh·∫≠p th√†nh c√¥ng
	}

	 @GetMapping("/revenue-data")
	    public ResponseEntity<Map<String, List<Map<String, Object>>>> getRevenueData() {
	        Map<String, List<Map<String, Object>>> revenueData = new HashMap<>();

	        // L·∫•y doanh thu theo ng√†y, tu·∫ßn, th√°ng
	        revenueData.put("daily", hoaDonService.getRevenueByDate());
	        revenueData.put("weekly", hoaDonService.getRevenueByWeek());
	        revenueData.put("monthly", hoaDonService.getRevenueByMonth());

	        return ResponseEntity.ok(revenueData);
	    }
}
